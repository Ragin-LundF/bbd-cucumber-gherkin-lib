buildscript {
    ext.kotlin_version = '1.7.10'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}
plugins {
    id "java"
    id "jacoco"
    id "signing"
    id "java-library"
    id "maven-publish"
    id "org.springframework.boot" version "2.7.2"
    id "io.spring.dependency-management" version "1.0.12.RELEASE"
    id "org.liquibase.gradle" version "2.1.1"
    id "org.sonarqube" version "3.4.0.2513"
}

apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'

wrapper {
    gradleVersion = "7.5"
}

configurations.all {
    exclude group: "org.springframework.boot", module: "spring-boot-starter-logging"
    exclude group: "ch.qos.logback", module: "logback-classic"
    exclude group: "ch.qos.logback", module: "logback-core"
}

dependencies {
    api "org.apache.httpcomponents:httpclient"
    api "org.glassfish:javax.json:1.1.4"
    api "net.javacrumbs.json-unit:json-unit:2.35.0"

    api "io.cucumber:cucumber-java:7.5.0"
    api "io.cucumber:cucumber-spring:7.5.0"
    api "io.cucumber:cucumber-junit:7.5.0"

    api "javax.validation:validation-api:2.0.1.Final"

    api "org.apache.commons:commons-text:1.9"
    implementation "commons-io:commons-io:2.11.0"
    implementation "org.apache.commons:commons-lang3:3.12.0"

    // Defining the version here, because Spring brings 4.5.0, which has a CVE
    implementation "org.liquibase:liquibase-core:4.14.0"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.springframework.boot:spring-boot-starter-test"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    implementation "com.fasterxml.jackson.dataformat:jackson-dataformat-csv"

    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    compileOnly "org.projectlombok:lombok:1.18.24"
    annotationProcessor "org.projectlombok:lombok:1.18.24"
    testCompileOnly "org.projectlombok:lombok:1.18.24"
    testAnnotationProcessor "org.projectlombok:lombok:1.18.24"

    testImplementation "com.h2database:h2:1.4.200"
}

jar {
    archiveClassifier.set('')   // remove "plain" suffix for jar files
}

def pomConfig = {
    licenses {
        license {
            name "MIT"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
    }
    developers {
        developer {
            name "ragin"
        }
    }

    scm {
        url "https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib"
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifactId "bdd-cucumber-gherkin-lib"
            version "${version}"
            pom {
                name = "bdd-cucumber-gherkin-lib"
                description = "Cucumber library for simpler e2e tests with predefined sentences for API and basic database access"
                url = "https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib"
                scm {
                    connection = "scm:git:git@github.com:Ragin-LundF/bbd-cucumber-gherkin-lib.git"
                    developerConnection = "scm:git:ssh://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib.git"
                    url = "https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib"
                }
                licenses {
                    license {
                        name = "MIT"
                        url = "https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib/blob/main/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "Ragin-LundF"
                        name = "Ragin-LundF"
                        organizationUrl = "https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib"
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "OSSRH"
            url = "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = System.getenv("OSSRH_USERNAME")
                password = System.getenv("OSSRH_PASSWORD")
            }
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Ragin-LundF/bbd-cucumber-gherkin-lib")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

signing {
    sign publishing.publications.maven
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withSourcesJar()
    withJavadocJar()
}

repositories {
    mavenCentral()
}

jar {
    enabled = true
}

bootJar {
    enabled = false
}

// exclude tests, because they are only examples
test {
    exclude '**'
}

configurations {
    cucumberRuntime {
        extendsFrom testImplementation
    }
}

test {
    jacoco {
        enabled = true
        destinationFile = file("$buildDir/results/jacoco/jacoco.exec")
        dumpOnExit = true
        classDumpDir = null
        output = JacocoTaskExtension.Output.FILE
        address = "localhost"
        port = 6300
        jmx = false
    }
}

jacoco {
    // temp fix for Kotlin issue. Should be removed after plugin depends on >= 0.8.7
    toolVersion = "0.8.7"
}

task cucumber(group: "verification") {
    doLast {
        javaexec {
            // Jacoco
            def jacocoAgent = zipTree(configurations.jacocoAgent.singleFile).filter { it.name == "jacocoagent.jar" }.singleFile
            jvmArgs = ["-javaagent:$jacocoAgent=destfile=$buildDir/results/jacoco/jacoco.exec,append=false"]
            // Cucumber execution
            main = "io.cucumber.core.cli.Main"
            classpath = configurations.cucumberRuntime + sourceSets.main.output + sourceSets.test.output
            String baseReportDir = "build/cucumberReport/"
            args = [
                    '-p', 'pretty',
                    '-p', 'html:'+baseReportDir+'cucumber-html',
                    '-p', 'junit:'+baseReportDir+'cucumber-junit.xml',
                    '-p', 'json:'+baseReportDir+'cucumber-json.json',
                    '--tags', 'not @ignore',
                    'src/test/resources/features'
            ]
        }
    }
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn cucumber
    reports {
        xml.enabled true
        csv.enabled true
        html.enabled true
    }
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "11"
    }
}
