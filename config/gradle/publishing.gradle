
def pomConfig = {
    licenses {
        license {
            name "MIT"
            url "https://opensource.org/licenses/MIT"
            distribution "repo"
        }
    }
    developers {
        developer {
            name "ragin"
        }
    }

    scm {
        url "https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib"
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
            artifactId = "bdd-cucumber-gherkin-lib"
            version = "${version}"
            pom {
                name = "bdd-cucumber-gherkin-lib"
                description = "Cucumber BDD library for simpler e2e tests with predefined sentences for API and basic database access"
                url = "https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib"
                scm {
                    connection = "scm:git:git@github.com:Ragin-LundF/bbd-cucumber-gherkin-lib.git"
                    developerConnection = "scm:git:ssh://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib.git"
                    url = "https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib"
                }
                licenses {
                    license {
                        name = "MIT"
                        url = "https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib/blob/main/LICENSE"
                    }
                }
                developers {
                    developer {
                        id = "Ragin-LundF"
                        name = "Ragin-LundF"
                        organizationUrl = "https://github.com/Ragin-LundF/bbd-cucumber-gherkin-lib"
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url = layout.buildDirectory.dir('staging-deploy')
        }
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/Ragin-LundF/bbd-cucumber-gherkin-lib")
            credentials {
                username = System.getenv("GITHUB_ACTOR")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

jreleaser {
    signing {
        active = 'ALWAYS'
        verify = false
        armored = true
        mode = 'FILE'
        secretKey = 'sonatype_secring.gpg'
    }
    deploy {
        maven {
            mavenCentral {
                sonatype {
                    active = 'ALWAYS'
                    url = 'https://central.sonatype.com/api/v1/publisher'
                    stagingRepository('build/staging-deploy')
                }
            }
        }
    }
}
